{"version":3,"sources":["components/Nav/Nav.js","components/Warn/Warn.js","components/AddForm/AddForm.js","components/SearchForm/SearchForm.js","components/ContactList/ContactList.js","App.js","index.js"],"names":["nav","CSSTransition","in","timeout","classNames","appear","className","Warn","AddForm","props","onInput","e","handleInput","target","name","value","number","onSubmit","preventDefault","handleSubmit","autoComplete","autoFocus","onChange","type","Search","onSearch","searchByFilter","ContactList","TransitionGroup","component","contacts","map","key","id","onClick","delete","App","state","filter","alert","setState","setTimeout","length","prevSt","uuidv4","console","log","setFilter","fWord","deleteContact","filterContacts","toLowerCase","includes","localStorage","getItem","this","prev","JSON","parse","setItem","stringify","filteredContacts","Nav","unmountOnExit","SearchForm","Component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.5d2a71d8.chunk.js","sourcesContent":["import React from 'react';\nimport {CSSTransition} from 'react-transition-group'\nimport './nav.css'\n\nconst nav = () => {\n    return(\n        <CSSTransition in={true} timeout={500} classNames='slide' appear={true}>\n        <div className=\"bigs\">\n            Phonebook\n        </div>\n        </CSSTransition>\n    )\n}\n\nexport default nav","import React from 'react';\nimport './warn.css'\nconst Warn = () => {\n    return(\n            <div className='warning'>Something wrong!</div>\n    )\n}\nexport default Warn","import React, { Component } from 'react';\nimport './form.css'\nimport PropTypes from 'prop-types'\n\nfunction AddForm (props) {\n    function onInput (e) {\n        props.handleInput(e.target.name, e.target.value)        \n    }\n    function onSubmit (e) {\n        e.preventDefault()\n        props.handleSubmit()\n    }\n    const {name, number} = props\n    return(\n        <form onSubmit={onSubmit}>\n            <p>Name</p>\n            <input autoComplete=\"off\" autoFocus={true} name=\"name\" value={name} onChange={(e) => onInput(e)} type=\"text\"></input>\n            <p>Number</p>\n            <input autoComplete=\"off\" name=\"number\" value={number} onChange={(e) => onInput(e)} type=\"text\"></input>\n            <button type=\"submit\" >Add Contact</button>\n        </form>\n    )\n    }\nexport default AddForm\n\nAddForm.propTypes = {\n    onSubmit: PropTypes.func,\n    onInput: PropTypes.func,\n    name: PropTypes.string,\n    number: PropTypes.string\n}","import React, { Component } from 'react';\nimport './search.css'\nimport PropTypes from 'prop-types'\n\nfunction Search ({onSearch}) {\n\n    function searchByFilter (e) {\n        onSearch(e.target.value)\n    }\n        return(\n            <form>\n                <p>Search</p>\n                <input autoComplete=\"off\" type=\"text\" onInput={(e) => searchByFilter(e)}></input>\n            </form>\n        )\n    }\nexport default Search\n\nSearch.propTypes = {\n    onSearch: PropTypes.func\n}","import React from 'react';\nimport {CSSTransition, TransitionGroup} from 'react-transition-group'\nimport './contacts.css'\nimport PropTypes from 'prop-types'\n\n\nfunction ContactList (props) {\n    return(\n        <TransitionGroup component=\"ul\">\n            {props.contacts.map(e => \n            <CSSTransition key={e.id} in={true} timeout={500}  classNames=\"cl\">\n            <li key={e.id}>\n                <p className=\"name\">{e.name}:</p>\n                <p className=\"number\">â˜Ž{e.number}</p>\n                <button onClick={() => props.delete(e.id)} className=\"delete\"></button>\n            </li>\n            </CSSTransition>)}\n        </TransitionGroup>\n        )\n    }\nexport default ContactList\n\nContactList.propTypes = {\n    contacts: PropTypes.array,\n    delete: PropTypes.func\n}\n","import React, {Component} from 'react';\nimport {CSSTransition} from 'react-transition-group'\nimport {v4 as uuidv4} from 'uuid'\nimport Nav from './components/Nav/Nav'\nimport Alert from './components/Warn/Warn'\nimport AddForm from './components/AddForm/AddForm'\nimport SearchForm from './components/SearchForm/SearchForm'\nimport ContactList from './components/ContactList/ContactList'\nimport './app.css'\n\nexport default class App extends Component {\n  state = {\n    name: '',\n    number: '',\n    contacts: [],\n    filter: '',\n    alert: false,\n  }\n  componentDidMount () {\n    if(localStorage.getItem('contacts')){\n      this.setState((prev)=>{return{contacts: JSON.parse(localStorage.getItem('contacts'))}})\n    }\n  }\n  componentDidUpdate () {\n    localStorage.setItem('contacts', JSON.stringify(this.state.contacts))\n  }\n  alert = () => {\n    this.setState({alert: true})\n      setTimeout(() => {\n        this.setState({alert: false})\n      }, 1000)\n  }\n  handleInput = (name, number) => {\n    if(name) {\n      this.setState({\n        [name]: number\n      })\n    };\n  }\n  handleSubmit = () => {\n    const {name, number, contacts} = this.state\n    if(name && number && contacts.filter(e => name === e.name).length === 0) {\n      this.setState((prevSt) => {\n        return {\n          contacts: [...prevSt.contacts, {name: name, number: number, id: uuidv4()}]\n        }\n      })\n      this.setState({\n        name: '',\n        number: ''\n      })\n      console.log(contacts.filter(e => name === e.name).length)\n    } else {this.alert()}\n  }    \n  setFilter = (fWord) => {\n    this.setState({filter: fWord})\n  }\n  deleteContact = (id) => {\n    const {contacts} = this.state\n    this.setState({contacts: contacts.filter(e => e.id !== id)})\n  }\n  filterContacts = () => {\n    const {contacts, filter} = this.state;\n    return contacts.filter(e => e.name.toLowerCase().includes(filter.toLowerCase()))\n  }\n  render() {\n   \n    const {name, number, alert, contacts} = this.state\n    \n    const filteredContacts = this.filterContacts()\n    return(\n      <>\n        <Nav/>\n        <CSSTransition in={alert} unmountOnExit timeout={500} classNames=\"al\"><Alert/></CSSTransition>\n          <AddForm handleSubmit={this.handleSubmit} handleInput={this.handleInput} name={name} number={number}/>\n        <CSSTransition in={contacts.length >= 1} timeout={500} unmountOnExit classNames=\"al\">\n          <SearchForm onSearch={this.setFilter}/>\n        </CSSTransition>\n        <ContactList contacts={filteredContacts} delete={this.deleteContact}/>\n      </>\n    )\n  }\n};\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n    <App />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}